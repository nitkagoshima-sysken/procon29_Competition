今から作るボット、例えば「さつまあげボット」を作るとしましょう。
「さつまあげボット」クラスは「ボット」クラスを必ず継承しなければなりません。
C#では「メンバ関数」のことを「メソッド」っていいます。
Visualizerがボットに答えを求めるとき、必ずAnswerっていうメソッドを呼び出します。だからボットは必ずAnswerというメソッドを持っていて、そこにエージェントをどう動かすかを書かなければなりません。Visualizerは「さつまあげボット」クラスのことを「ボット」クラスとして見ていません。しかし、「さつまあげボット」は「ボット」クラスを継承しているので、「ボット」クラスの要素を持っているわけです。
簡単に言うと、Visualizerは「ボット」クラスに話しかける方法を知っています。でも、「さつまあげボット」に話しかける方法は知りません。
でも、「さつまあげボット」が「ボット」クラスを継承していたら、「ボット」と同じように話しかければいいので、うまくいくわけです。
逆に「ボット」を継承していない場合、Visualizerは「さつまあげボット」にどう話しかければいいか分かりません。エラーを起こしてしまいます。
だから「さつまあげボット」は「ボット」クラスを必ず継承する必要があります。

Botクラスの中身はこうなっています。
今から一つずつ説明するね。
Calc、これはさっき説明したように、計算してくれるクラスです。
Team、これは自分がAチームか、Bチームかどちらであるかを確認するための変数です。TeamがもしAだったら、ボットはAチームであるという意味です。
Question、Visualizerは最初にこのQuestionメソッドを呼び出して、今、エージェントがどこにいて、フィールドがどういう状況かを教えてくれます。
その後にVisualizerがAnswerを呼び出して、ボットに次のターンでエージェントがどう動くか教えてくれるという仕組みです。
QuestionでVisualizerが問題を提示して、Answerでボットが回答するという感覚です。
Simulate、でもしエージェントが動いたらどうなるか、っていうのをシミュレーションできるのがSimulateです。

で、これを継承してボットを作っていくわけです。
自分で作るボットには機能を自由に追加してもいいけど、必ずボットクラスを継承してください。

これから実際に作っていきます。
今できる人は、Visual Studioを立ち上げてプロジェクトを開いてください。